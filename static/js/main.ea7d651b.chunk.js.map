{"version":3,"sources":["components/Header.js","context/CategoriasContext.js","context/RecetasContext.js","components/Formulario.js","context/ModalContext.js","components/Receta.js","components/ListaRecetas.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","CategoriasContext","createContext","CategoriasProvider","props","useState","categorias","guardarCategorias","useEffect","a","axios","get","respuesta","data","drinks","obtenerCategoria","Provider","value","children","RecetasContext","RecetasProvider","recetas","guardarRecetas","nombre","categoria","busqueda","buscarRecetas","consultar","guardarConsultar","url","obtenerRecetas","Formulario","useContext","guardaBusqueda","obtenerDatosReceta","e","target","name","onSubmit","preventDefault","type","placeholder","onChange","map","strCategory","ModalContext","ModalProvider","idreceta","guardarIdReceta","informacion","guardarReceta","obtenerReceta","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","Receta","receta","modalStyle","open","setOpen","classes","strDrink","src","strDrinkThumb","onClick","idDrink","Modal","onClose","style","strInstructions","ingredientes","i","push","mostrarIngredientes","ListaRecetas","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea7d651b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <header className='bg-alert'>\r\n            <h1>Buscador de Recetas de Licores</h1>\r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Header;","import React , {createContext, useEffect , useState } from 'react';\r\nimport axios from 'axios'\r\n\r\n\r\n//crear un context\r\n\r\nexport const CategoriasContext =  createContext();\r\n\r\n//provider es donde se encuentran las funciones y el state\r\n\r\nconst CategoriasProvider = (props)=>{\r\n    //crear el state del context\r\n\r\n    const [categorias,guardarCategorias]= useState([])\r\n\r\n    useEffect(()=>{\r\n        const obtenerCategoria = async()=>{\r\n            const url = `https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list`\r\n\r\n            const respuesta = await axios.get(url)\r\n\r\n            guardarCategorias(respuesta.data.drinks)\r\n\r\n            \r\n        }\r\n        obtenerCategoria()\r\n    \r\n    },[])\r\n\r\n    return(\r\n        <CategoriasContext.Provider\r\n            value={{\r\n                categorias\r\n                }}\r\n        >\r\n            {props.children}\r\n        </CategoriasContext.Provider>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default CategoriasProvider;\r\n","import React , {createContext,useState,useEffect}from 'react';\r\nimport axios from 'axios'\r\n\r\nexport const RecetasContext = createContext()\r\n\r\n\r\n\r\nconst RecetasProvider = (props) => {\r\n\r\n    const [recetas,guardarRecetas]=useState([])\r\n\r\n    const [busqueda,buscarRecetas]= useState({\r\n        nombre:'',\r\n        categoria:''\r\n    })\r\n\r\n    const [consultar,guardarConsultar]=useState(false)\r\n\r\n    const {nombre,categoria}=busqueda\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        \r\n        if(consultar){\r\n\r\n            const obtenerRecetas = async ()=>{\r\n                const url =`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${nombre}&?c=${categoria}`\r\n    \r\n                const respuesta = await axios.get(url)\r\n\r\n                guardarRecetas(respuesta.data.drinks)\r\n            }\r\n    \r\n            obtenerRecetas()\r\n    \r\n        }\r\n     \r\n\r\n    },[busqueda])\r\n\r\n    return ( \r\n        <RecetasContext.Provider\r\n            value={{\r\n                recetas,\r\n                buscarRecetas,\r\n                guardarConsultar\r\n                }}\r\n        >\r\n            {props.children}\r\n        </RecetasContext.Provider>\r\n     );\r\n}\r\n \r\nexport default RecetasProvider;\r\n","import React , {useContext,useState} from 'react';\r\nimport {CategoriasContext} from '../context/CategoriasContext'\r\nimport {RecetasContext}  from '../context/RecetasContext'\r\n\r\nconst Formulario = () => {\r\n\r\n    const {categorias} = useContext(CategoriasContext)\r\n    const {buscarRecetas , guardarConsultar} = useContext(RecetasContext)\r\n\r\n    const [busqueda,guardaBusqueda]= useState({\r\n        nombre:'',\r\n        categoria:''\r\n    })\r\n\r\n    const obtenerDatosReceta = (e)=>{\r\n        guardaBusqueda({\r\n            ...busqueda,\r\n            [e.target.name]:e.target.value\r\n        })\r\n\r\n    }\r\n    \r\n    return ( \r\n        <form \r\n            className='col-12'\r\n            onSubmit={ e =>{\r\n                e.preventDefault();\r\n                buscarRecetas(busqueda)\r\n                guardarConsultar(true)\r\n            }\r\n\r\n            }\r\n        >\r\n            <fieldset className='text-center'>\r\n                <legend>Busca bebida por categoria o por ingrediente</legend>\r\n            </fieldset>\r\n            <div className='row mt-4'>\r\n                <div className='col-md-4'>\r\n                    <input \r\n                        type='text'\r\n                        name='nombre'\r\n                        placeholder='busca por ingrediente'\r\n                        className='form-control' \r\n                        onChange={obtenerDatosReceta}\r\n                    />\r\n                </div>\r\n                <div className='col-md-4 '>\r\n                    <select\r\n                        className='form-control'\r\n                        name='categoria'\r\n                        onChange={obtenerDatosReceta}\r\n                    >\r\n                        <option value=''>--Seleciona Una Categoria--</option>\r\n                       {categorias.map( categoria =>(\r\n                            <option \r\n                                key={categoria.strCategory}\r\n                                value={categoria.strCategory}\r\n                            >{categoria.strCategory}</option>\r\n                       ))}\r\n                    </select>\r\n                </div>\r\n                <div className='col-md-4'>\r\n                    <input\r\n                        type='submit'\r\n                        value='Buscar Receta'\r\n                        className='btn btn-primary btn-block'\r\n                    /> \r\n                </div>\r\n            </div>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Formulario;","import React , { createContext,useState,useEffect} from 'react';\r\nimport axios from 'axios'\r\nexport const ModalContext = createContext()\r\n\r\n\r\nconst ModalProvider = (props) => {\r\n\r\n    const [idreceta,guardarIdReceta]=useState(null)\r\n    const [informacion,guardarReceta] = useState({})\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!idreceta) return;\r\n\r\n        const obtenerReceta =async ()=>{\r\n            const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idreceta}`\r\n\r\n            const respuesta = await axios.get(url)\r\n\r\n            guardarReceta(respuesta.data.drinks[0])\r\n           \r\n\r\n            \r\n        }\r\n\r\n        obtenerReceta()\r\n        \r\n    },[idreceta])\r\n\r\n    return ( \r\n        <ModalContext.Provider\r\n            value={{\r\n                informacion,\r\n                guardarIdReceta,\r\n                guardarReceta\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ModalContext.Provider>\r\n     );\r\n}\r\n \r\nexport default ModalProvider;","import React , {useContext ,useState} from 'react';\r\nimport {ModalContext} from '../context/ModalContext'\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 ;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nconst Receta = ({receta}) => {\r\n\r\n    // Configuración del modal de material-ui\r\n    const [ modalStyle ] = useState(getModalStyle);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const {guardarIdReceta,informacion,guardarReceta}= useContext(ModalContext)\r\n\r\n\r\n     // Muestra y formatea los ingredientes\r\n     const mostrarIngredientes = informacion => {\r\n        let ingredientes = [];\r\n        for(let i = 1; i < 16; i++){\r\n            if( informacion[`strIngredient${i}`] ) {\r\n                ingredientes.push(\r\n                    <li> { informacion[`strIngredient${i}`] }  { informacion[`strMeasure${i}`] }</li>\r\n                )\r\n            }\r\n        }\r\n\r\n        return ingredientes;\r\n    }\r\n\r\n\r\n    return ( \r\n        <div className='col-md-4 col-sm-6 mb-3'>\r\n            <div className='card'>\r\n                <h2 className='card-header'>{receta.strDrink}</h2>\r\n\r\n                <img className='card-img-top' src={receta.strDrinkThumb} />\r\n            \r\n                <div className='card-body'>\r\n                    <button \r\n                        className='btn btn-block btn-primary'\r\n                        type='button'\r\n                        onClick={e=>{\r\n                            guardarIdReceta(receta.idDrink);\r\n                            handleOpen()\r\n                            guardarReceta({})\r\n                            }}\r\n                    >Ver Recetas</button>\r\n\r\n                        <Modal\r\n                            open={open}\r\n                            onClose={() => {\r\n                                guardarIdReceta(null);\r\n                                guardarReceta({})\r\n                                handleClose();\r\n                            }}\r\n                        >\r\n                            <div style={modalStyle} className={classes.paper}>\r\n                                <h2>{informacion.strDrink}</h2>\r\n                                <h3 className=\"mt-4\">Instrucciones</h3>\r\n                                <p>\r\n                                    {informacion.strInstructions}\r\n                                </p>\r\n\r\n                                <img className=\"img-fluid my-4\" src={informacion.strDrinkThumb} />\r\n\r\n                                <h3>Ingredientes y cantidades</h3>\r\n                                <ul>\r\n                                    { mostrarIngredientes(informacion) }\r\n                                </ul>\r\n                            </div>\r\n                     </Modal>\r\n                </div>  \r\n            \r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Receta;","import React , {useContext} from 'react';\r\nimport Receta from './Receta'\r\nimport {RecetasContext} from '../context/RecetasContext'\r\n\r\nconst ListaRecetas = () => {\r\n\r\nconst {recetas} = useContext(RecetasContext)\r\n\r\n\r\n\r\n    return ( \r\n        <div className='row mt-5'>\r\n            {recetas.map( receta => \r\n                ( <Receta\r\n                        key={receta.idDrink}\r\n                        receta={receta}\r\n                    />\r\n                )\r\n            )}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ListaRecetas;","import React  from 'react';\nimport Header from './components/Header';\nimport Formulario from './components/Formulario';\nimport ListaRecetas from './components/ListaRecetas'\nimport CategoriasProvider from './context/CategoriasContext'\nimport RecetasProvider from './context/RecetasContext'\nimport ModalProvider from './context/ModalContext'\n\n\n\n\nfunction App() {\n  return (\n    <CategoriasProvider>\n        <RecetasProvider>\n          <ModalProvider>\n            <Header/>\n\n            <div className='container mt-5'>\n              <div className='row'>\n                <Formulario/>\n              </div>\n              <ListaRecetas/>\n            </div>\n          </ModalProvider>\n        </RecetasProvider>\n    </CategoriasProvider>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}